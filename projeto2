print('_' * 40)
print('|')
print('|', end='')
print(' ' * 12, end='')
print('Projeto 02')
print('|', end='')
print("""
|             __-------__
|           / _---------_ \ 
|          / /           \ \ 
|          | |           | |
|          |_|___________|_|
|      /-\|                 |/-\ 
|     | _ |\      5 6      /| _ |
|     |(_)| \      !      / |(_)|
|     |___|__\_____!_____/__|___|
|     [_________|herbie|________] 
|      ||||     ~~~~~~~~     ||||
|      `--'                  `--'
""", end='')
print('|')
print('|', end='     ')
comeco = int(input('quer comecar (0 para sim e 1 para nao)'))
CPF_LD = []
while True:
    if comeco == 0:
        soma = 0
        CPF_G = []
        print('|')
        print('|', end='     ')
        CPF = input('digite seu cpf')
        CPF_L = list(CPF)
        if len(CPF) == 11:
            if CPF.isalnum():
                for i in range(len(CPF_L)):
                    CPF_L[i] = int(CPF_L[i])
                for c in range (1, 10):
                    soma += CPF_L[c-1] * (11 - c)
                    CPF_G.append(CPF_L[c-1])
                if soma % 11 < 2:
                    Digit = 0
                else:
                    Digit = 11 - (soma % 11)
                CPF_G.append(Digit)
                soma = 0
                for c in range (1, 11):
                    soma += CPF_G[c-1] * (12 - c)
                if soma % 11 < 2:
                    Digit = 0
                else:
                    Digit = 11 - (soma % 11)
                CPF_G.append(Digit)
                if CPF_L == CPF_G:
                    validacao = 'valido'
                else:
                    validacao = 'invalido'
                CPF_D = {'CPF':CPF_L,'validacao':validacao}
                CPF_LD.append(CPF_D)
                print('|')
                print('|', end='     ')
                comeco = int(input('quer continuar (0 para sim e 1 para nao)'))
            elif CPF.isalpha():
                print('|')
                print('|', end='     ')
                print('\033[31mERRO - CPF sao numeros\033[0m')
        else:
            print('|')
            print('|', end='     ')
            print('\033[31mERRO - CPF com menos de 11 digitos\033[0m')
        if comeco != 0:
            break
    else:
        break
total = len(CPF_LD)
v = 0
iv = 0
for i in CPF_LD:
    if i['validacao'] == 'valido':
        v += 1
    else:
        iv += 1
if total > 0:
    porc_v = (v / total) * 100
    porc_iv = (iv / total) * 100
else:
    porc_v = porc_iv = 0
print('|')
print('|', end='     ')
print(f'total de cpf = {total}')
print('|')
print('|', end='     ')
print(f'cpf validos = {v}')
print('|')
print('|', end='     ')
print(f'cpf invalidos = {iv}')
print('|')
print('|', end='     ')
print(f'porcentagem de cpf validos = {porc_v:.2f}%')
print('|')
print('|', end='     ')
print(f'porcentagem de cpf invalidos = {porc_iv:.2f}%')
for i in CPF_LD:
    print('|')
    print('|', end='     ')
    print(i)
print('|', end='')
print('_' * 40) 